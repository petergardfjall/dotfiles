;; Main entry-point for emacs configuration.
;; See http://wikemacs.org/wiki/Package.el


;; Use the package.el package manager that comes bundled with Emacs24
(require 'package)
(package-initialize)

(message "Loading init.el ...")

;; add package archives
(add-to-list 'package-archives
	     '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives
	     '("org" . "http://orgmode.org/elpa/") t)


;; Common Lisp for Emacs
(require 'cl-lib)
 
(defvar my-packages
  '(material-theme ;; color theme
    auto-complete  ;; generic auto-completion functionality
    pos-tip        ;; used by auto-complete to render nicer popups 
    powerline      ;; Prettier mode line at bottom of screen
    neotree        ;; File navigator on the left via F8
    flycheck       ;; pluggable on-the-fly syntax checking
    ;; Markdown (.md) editing
    markdown-mode
    ;; Yaml editing
    yaml-mode
    ;; Python editing
    python         ;; Python mode
    jedi           ;; Python auto-completion and method signature help
    ;; Go editing
    go-mode        ;; Golang mode
    go-autocomplete
    )
  "A list of packages that are to be installed at launch (unless present).")
 
(defun my-packages-installed-p ()
  (cl-loop for p in my-packages
	   when (not (package-installed-p p))  do (cl-return nil)
	   finally (cl-return t)))
 
(unless (my-packages-installed-p)
  ;; check for new packages (package versions)
  (message "%s" "Emacs Prelude is now refreshing its package database...")
  (package-refresh-contents)
  (message "%s" " done.")
  ;; install the missing packages
  (dolist (p my-packages)
    (when (not (package-installed-p p))
      (package-install p))))


;;
;; General settings
;;
(set-language-environment "UTF-8")
(setq inhibit-startup-screen t)
(setq column-number-mode t)
; set the default font to use
(add-to-list 'default-frame-alist
             '(font . "DejaVu Sans Mono-10"))
;; Allow copy/paste to/from system clipboard
(setq x-select-enable-clipboard t) 
;; Middle mouse button inserts the clipboard (rather than emacs primary)
(global-set-key (kbd "<mouse-2>") 'x-clipboard-yank)
;; Hide vertical scrollbar on right
(scroll-bar-mode -1)
;; Hide tool-bar (icons, such as open file, cut, paste, etc)
(tool-bar-mode -1)
;; Display line numbers (toggle with M-x linum-mode)
(global-linum-mode -1)

;;
;; Package configs that can be set before the packages have been loaded
;; (happens on exit of init.el)
;;

;;
;; Set up hooks for configuration that is to take place after packages have
;; been loaded (loading happens on exit of init.el).
;;

(add-hook 'after-init-hook 'theme-setup-hook)
(add-hook 'after-init-hook 'python-setup-hook)
(add-hook 'after-init-hook 'go-setup-hook)
(add-hook 'after-init-hook 'js-setup-hook)
(add-hook 'after-init-hook 'yaml-setup-hook)

(defun theme-setup-hook ()
  (message "theme-setup-hook ...")
  (require 'material-theme)
  (load-theme 'material t)

  (require 'powerline)
  (powerline-default-theme)

  (require 'neotree)
  (global-set-key [f8] 'neotree-toggle)

  ;; On-the-fly syntax checking (support for different languages)
  ;;(require 'flycheck)
  ;;(global-flycheck-mode)
  )


(defun python-setup-hook ()
  (message "python-setup-hook ...")
  (require 'python)

  ;; after-load is only evaluated once after the given file has been loaded
  ;; (python-mode is loaded by python.el according to M-x describe-mode)
  (eval-after-load 'python
    '(progn
       (message "python eval-after-load hook ...")
       ;; when available, auto-complete uses pos-tip to render nicer popups
       (require 'pos-tip)
       (require 'auto-complete)
       (ac-config-default)
       ;; use minibuffer instead of pop-up to display method signature
       ;;(setq jedi:tooltip-method nil)
       ;; Set up recommended key bindings (optional)
       (setq jedi:setup-keys t)
       ;; Start auto-completion when entering a '.' (optional)
       (setq jedi:complete-on-dot t)
       ))
  ;; mode hooks are evaluated once per buffer
  (defun buffer-setup ()
    (message "python buffer setup hook ...")
    (linum-mode t)
    ;; enable auto-completion and method signature help
    (jedi:setup)
    (local-set-key (kbd "C-c C-d")  'jedi:show-doc)
    (local-set-key (kbd "<M-down>") 'jedi:goto-definition)
    (local-set-key (kbd "<M-up>")   'jedi:goto-definition-pop-marker)
    )
  (add-hook 'python-mode-hook 'buffer-setup))


(defun go-setup-hook ()
  ;; http://yousefourabi.com/blog/2014/05/emacs-for-go/ 
  (message "go-setup-hook ...")
  (require 'go-mode)

  ;; after-load is only evaluated once after the given file has been loaded
  ;; (go-mode is loaded by go-mode.el according to M-x describe-mode)
  (eval-after-load 'go-mode
    '(progn
       (message "go eval-after-load hook ...")
       (require 'go-autocomplete)
       ))
  
  ;; mode hooks are evaluated once per buffer
  (defun buffer-setup ()
    (message "go buffer setup hook ...")
    (linum-mode t)

    (add-hook 'before-save-hook 'gofmt-before-save)
    (local-set-key (kbd "C-c C-r") 'go-remove-unused-imports)
    (local-set-key (kbd "C-c C-g") 'go-goto-imports)
    (local-set-key (kbd "C-c C-f") 'gofmt)
    (auto-complete-mode)
    )
  (add-hook 'go-mode-hook 'buffer-setup))


(defun js-setup-hook ()
  (message "js-setup-hook ...")
  (defun buffer-setup ()
    (message "go buffer setup hook ...")
    ;; use 4 space indentation
    (setq indent-tabs-mode nil js-indent-level 4))  
  (add-hook 'js-mode-hook 'buffer-setup))

(defun yaml-setup-hook ()
  (message "yaml-setup-hook ...")
  (defun buffer-setup ()
    (message "yaml buffer setup hook ...")
    ;; RETURN should start indented on the next line.
    (define-key yaml-mode-map "\C-m" 'newline-and-indent))
  (add-hook 'js-mode-hook 'buffer-setup))


;
; load any local modules from module directory in lexicographical order
;
(setq modules (file-expand-wildcards "~/dotfiles/emacs.modules/*.el"))
(setq sortedmodules (sort (copy-sequence modules) #'string-lessp))
;; Note: messages are logged in *Messages* buffer
(message "Loading local modules: %s" sortedmodules) 
(dolist (module sortedmodules)
  (load-file module)
)


(message "%s" "emacs.init done.")
